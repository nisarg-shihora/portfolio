{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:/Portfolio/Portfolio/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _createForOfIteratorHelper = require(\"D:/Portfolio/Portfolio/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _asyncToGenerator = require(\"D:/Portfolio/Portfolio/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"D:/Portfolio/Portfolio/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"D:/Portfolio/Portfolio/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextDrawer = exports.validTypes = void 0;\nvar Utils_1 = require(\"../../Utils/Utils\");\nexports.validTypes = [\"text\", \"character\", \"char\"];\nvar TextDrawer = /*#__PURE__*/function () {\n  function TextDrawer() {\n    _classCallCheck(this, TextDrawer);\n  }\n  _createClass(TextDrawer, [{\n    key: \"getSidesCount\",\n    value: function getSidesCount() {\n      return 12;\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(container) {\n        var options, shapeOptions, promises, _iterator, _step, character;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              options = container.actualOptions;\n              if (!exports.validTypes.find(function (t) {\n                return (0, Utils_1.isInArray)(t, options.particles.shape.type);\n              })) {\n                _context.next = 14;\n                break;\n              }\n              shapeOptions = exports.validTypes.map(function (t) {\n                return options.particles.shape.options[t];\n              }).find(function (t) {\n                return !!t;\n              });\n              if (!(shapeOptions instanceof Array)) {\n                _context.next = 11;\n                break;\n              }\n              promises = [];\n              _iterator = _createForOfIteratorHelper(shapeOptions);\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  character = _step.value;\n                  promises.push((0, Utils_1.loadFont)(character));\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n              _context.next = 9;\n              return Promise.allSettled(promises);\n            case 9:\n              _context.next = 14;\n              break;\n            case 11:\n              if (!(shapeOptions !== undefined)) {\n                _context.next = 14;\n                break;\n              }\n              _context.next = 14;\n              return (0, Utils_1.loadFont)(shapeOptions);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"draw\",\n    value: function draw(context, particle, radius, opacity) {\n      var _a, _b, _c;\n      var character = particle.shapeData;\n      if (character === undefined) {\n        return;\n      }\n      var textData = character.value;\n      if (textData === undefined) {\n        return;\n      }\n      var textParticle = particle;\n      if (textParticle.text === undefined) {\n        textParticle.text = textData instanceof Array ? (0, Utils_1.itemFromArray)(textData, particle.randomIndexData) : textData;\n      }\n      var text = textParticle.text;\n      var style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\";\n      var weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\";\n      var size = Math.round(radius) * 2;\n      var font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\";\n      var fill = particle.fill;\n      var offsetX = text.length * radius / 2;\n      context.font = \"\".concat(style, \" \").concat(weight, \" \").concat(size, \"px \\\"\").concat(font, \"\\\"\");\n      var pos = {\n        x: -offsetX,\n        y: radius / 2\n      };\n      context.globalAlpha = opacity;\n      if (fill) {\n        context.fillText(text, pos.x, pos.y);\n      } else {\n        context.strokeText(text, pos.x, pos.y);\n      }\n      context.globalAlpha = 1;\n    }\n  }]);\n  return TextDrawer;\n}();\nexports.TextDrawer = TextDrawer;","map":{"version":3,"names":["_regeneratorRuntime","require","default","_createForOfIteratorHelper","_asyncToGenerator","_classCallCheck","_createClass","Object","defineProperty","exports","value","TextDrawer","validTypes","Utils_1","key","getSidesCount","_init","mark","_callee","container","options","shapeOptions","promises","_iterator","_step","character","wrap","_callee$","_context","prev","next","actualOptions","find","t","isInArray","particles","shape","type","map","Array","s","n","done","push","loadFont","err","e","f","Promise","allSettled","undefined","stop","init","_x","apply","arguments","draw","context","particle","radius","opacity","_a","_b","_c","shapeData","textData","textParticle","text","itemFromArray","randomIndexData","style","weight","size","Math","round","font","fill","offsetX","length","concat","pos","x","y","globalAlpha","fillText","strokeText"],"sources":["D:/Portfolio/Portfolio/node_modules/tsparticles/cjs/Shapes/Text/TextDrawer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextDrawer = exports.validTypes = void 0;\nconst Utils_1 = require(\"../../Utils/Utils\");\nexports.validTypes = [\"text\", \"character\", \"char\"];\nclass TextDrawer {\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (exports.validTypes.find((t) => (0, Utils_1.isInArray)(t, options.particles.shape.type))) {\n            const shapeOptions = exports.validTypes.map((t) => options.particles.shape.options[t]).find((t) => !!t);\n            if (shapeOptions instanceof Array) {\n                const promises = [];\n                for (const character of shapeOptions) {\n                    promises.push((0, Utils_1.loadFont)(character));\n                }\n                await Promise.allSettled(promises);\n            }\n            else {\n                if (shapeOptions !== undefined) {\n                    await (0, Utils_1.loadFont)(shapeOptions);\n                }\n            }\n        }\n    }\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text =\n                textData instanceof Array ? (0, Utils_1.itemFromArray)(textData, particle.randomIndexData) : textData;\n        }\n        const text = textParticle.text;\n        const style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\";\n        const weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\";\n        const size = Math.round(radius) * 2;\n        const font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\";\n        const fill = particle.fill;\n        const offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n}\nexports.TextDrawer = TextDrawer;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,mBAAA,GAAAC,OAAA,qFAAAC,OAAA;AAAA,IAAAC,0BAAA,GAAAF,OAAA,4FAAAC,OAAA;AAAA,IAAAE,iBAAA,GAAAH,OAAA,mFAAAC,OAAA;AAAA,IAAAG,eAAA,GAAAJ,OAAA,iFAAAC,OAAA;AAAA,IAAAI,YAAA,GAAAL,OAAA,8EAAAC,OAAA;AACbK,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAGF,OAAO,CAACG,UAAU,GAAG,KAAK,CAAC;AAChD,IAAMC,OAAO,GAAGZ,OAAO,CAAC,mBAAmB,CAAC;AAC5CQ,OAAO,CAACG,UAAU,GAAG,CAAC,MAAM,EAAE,WAAW,EAAE,MAAM,CAAC;AAAC,IAC7CD,UAAU;EAAA,SAAAA,WAAA;IAAAN,eAAA,OAAAM,UAAA;EAAA;EAAAL,YAAA,CAAAK,UAAA;IAAAG,GAAA;IAAAJ,KAAA,EACZ,SAAAK,cAAA,EAAgB;MACZ,OAAO,EAAE;IACb;EAAC;IAAAD,GAAA;IAAAJ,KAAA;MAAA,IAAAM,KAAA,GAAAZ,iBAAA,eAAAJ,mBAAA,GAAAiB,IAAA,CACD,SAAAC,QAAWC,SAAS;QAAA,IAAAC,OAAA,EAAAC,YAAA,EAAAC,QAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,SAAA;QAAA,OAAAzB,mBAAA,GAAA0B,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACVV,OAAO,GAAGD,SAAS,CAACY,aAAa;cAAA,KACnCtB,OAAO,CAACG,UAAU,CAACoB,IAAI,CAAC,UAACC,CAAC;gBAAA,OAAK,CAAC,CAAC,EAAEpB,OAAO,CAACqB,SAAS,EAAED,CAAC,EAAEb,OAAO,CAACe,SAAS,CAACC,KAAK,CAACC,IAAI,CAAC;cAAA,EAAC;gBAAAT,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACjFT,YAAY,GAAGZ,OAAO,CAACG,UAAU,CAAC0B,GAAG,CAAC,UAACL,CAAC;gBAAA,OAAKb,OAAO,CAACe,SAAS,CAACC,KAAK,CAAChB,OAAO,CAACa,CAAC,CAAC;cAAA,EAAC,CAACD,IAAI,CAAC,UAACC,CAAC;gBAAA,OAAK,CAAC,CAACA,CAAC;cAAA,EAAC;cAAA,MACnGZ,YAAY,YAAYkB,KAAK;gBAAAX,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACvBR,QAAQ,GAAG,EAAE;cAAAC,SAAA,GAAApB,0BAAA,CACKkB,YAAY;cAAA;gBAApC,KAAAE,SAAA,CAAAiB,CAAA,MAAAhB,KAAA,GAAAD,SAAA,CAAAkB,CAAA,IAAAC,IAAA,GAAsC;kBAA3BjB,SAAS,GAAAD,KAAA,CAAAd,KAAA;kBAChBY,QAAQ,CAACqB,IAAI,CAAC,CAAC,CAAC,EAAE9B,OAAO,CAAC+B,QAAQ,EAAEnB,SAAS,CAAC,CAAC;gBACnD;cAAC,SAAAoB,GAAA;gBAAAtB,SAAA,CAAAuB,CAAA,CAAAD,GAAA;cAAA;gBAAAtB,SAAA,CAAAwB,CAAA;cAAA;cAAAnB,QAAA,CAAAE,IAAA;cAAA,OACKkB,OAAO,CAACC,UAAU,CAAC3B,QAAQ,CAAC;YAAA;cAAAM,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAA,MAG9BT,YAAY,KAAK6B,SAAS;gBAAAtB,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACpB,CAAC,CAAC,EAAEjB,OAAO,CAAC+B,QAAQ,EAAEvB,YAAY,CAAC;YAAA;YAAA;cAAA,OAAAO,QAAA,CAAAuB,IAAA;UAAA;QAAA,GAAAjC,OAAA;MAAA,CAIxD;MAAA,SAAAkC,KAAAC,EAAA;QAAA,OAAArC,KAAA,CAAAsC,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAH,IAAA;IAAA;EAAA;IAAAtC,GAAA;IAAAJ,KAAA,EACD,SAAA8C,KAAKC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,OAAO,EAAE;MACrC,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE;MACd,IAAMtC,SAAS,GAAGiC,QAAQ,CAACM,SAAS;MACpC,IAAIvC,SAAS,KAAKyB,SAAS,EAAE;QACzB;MACJ;MACA,IAAMe,QAAQ,GAAGxC,SAAS,CAACf,KAAK;MAChC,IAAIuD,QAAQ,KAAKf,SAAS,EAAE;QACxB;MACJ;MACA,IAAMgB,YAAY,GAAGR,QAAQ;MAC7B,IAAIQ,YAAY,CAACC,IAAI,KAAKjB,SAAS,EAAE;QACjCgB,YAAY,CAACC,IAAI,GACbF,QAAQ,YAAY1B,KAAK,GAAG,CAAC,CAAC,EAAE1B,OAAO,CAACuD,aAAa,EAAEH,QAAQ,EAAEP,QAAQ,CAACW,eAAe,CAAC,GAAGJ,QAAQ;MAC7G;MACA,IAAME,IAAI,GAAGD,YAAY,CAACC,IAAI;MAC9B,IAAMG,KAAK,GAAG,CAACT,EAAE,GAAGpC,SAAS,CAAC6C,KAAK,MAAM,IAAI,IAAIT,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE;MACxE,IAAMU,MAAM,GAAG,CAACT,EAAE,GAAGrC,SAAS,CAAC8C,MAAM,MAAM,IAAI,IAAIT,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,KAAK;MAC7E,IAAMU,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACf,MAAM,CAAC,GAAG,CAAC;MACnC,IAAMgB,IAAI,GAAG,CAACZ,EAAE,GAAGtC,SAAS,CAACkD,IAAI,MAAM,IAAI,IAAIZ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,SAAS;MAC7E,IAAMa,IAAI,GAAGlB,QAAQ,CAACkB,IAAI;MAC1B,IAAMC,OAAO,GAAIV,IAAI,CAACW,MAAM,GAAGnB,MAAM,GAAI,CAAC;MAC1CF,OAAO,CAACkB,IAAI,MAAAI,MAAA,CAAMT,KAAK,OAAAS,MAAA,CAAIR,MAAM,OAAAQ,MAAA,CAAIP,IAAI,WAAAO,MAAA,CAAOJ,IAAI,OAAG;MACvD,IAAMK,GAAG,GAAG;QACRC,CAAC,EAAE,CAACJ,OAAO;QACXK,CAAC,EAAEvB,MAAM,GAAG;MAChB,CAAC;MACDF,OAAO,CAAC0B,WAAW,GAAGvB,OAAO;MAC7B,IAAIgB,IAAI,EAAE;QACNnB,OAAO,CAAC2B,QAAQ,CAACjB,IAAI,EAAEa,GAAG,CAACC,CAAC,EAAED,GAAG,CAACE,CAAC,CAAC;MACxC,CAAC,MACI;QACDzB,OAAO,CAAC4B,UAAU,CAAClB,IAAI,EAAEa,GAAG,CAACC,CAAC,EAAED,GAAG,CAACE,CAAC,CAAC;MAC1C;MACAzB,OAAO,CAAC0B,WAAW,GAAG,CAAC;IAC3B;EAAC;EAAA,OAAAxE,UAAA;AAAA;AAELF,OAAO,CAACE,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}